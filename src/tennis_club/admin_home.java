/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tennis_club;

import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class admin_home extends javax.swing.JFrame {

    /**
     * Creates new form admin_home
     */
    public admin_home() {
        initComponents();
        load_to_table();
        load_to_table_coacher();
        lg.setText(login.db_user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lg = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panel = new javax.swing.JTabbedPane();
        User = new javax.swing.JPanel();
        add_to_table_user = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        T6 = new javax.swing.JTable();
        emailt2 = new javax.swing.JTextField();
        contactt3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addresst4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        usernamet6 = new javax.swing.JTextField();
        namet1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cmb = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        passwordt8 = new javax.swing.JPasswordField();
        passwordt7 = new javax.swing.JPasswordField();
        jScrollPane3 = new javax.swing.JScrollPane();
        T7 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        SAVE_db_user = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        show_table = new javax.swing.JButton();
        edit_user = new javax.swing.JButton();
        delete_user = new javax.swing.JButton();
        update_save_user = new javax.swing.JButton();
        Clear_user1 = new javax.swing.JButton();
        Player = new javax.swing.JPanel();
        memberplan = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        matches = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        Coaches = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cname = new javax.swing.JTextField();
        caddress = new javax.swing.JTextField();
        ccontact = new javax.swing.JTextField();
        cemail = new javax.swing.JTextField();
        cprice = new javax.swing.JTextField();
        add_to_table_coacher = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        coacher_table_2 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        cnic = new javax.swing.JTextField();
        clear_coacher = new javax.swing.JButton();
        SAVE_db_coacher = new javax.swing.JButton();
        update_save_coacher = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        coacher_table_1 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        edit_user1 = new javax.swing.JButton();
        delete_user1 = new javax.swing.JButton();
        report = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        privetcoaches = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        payment = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Admin Panel");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, 230, 50));

        lg.setBackground(new java.awt.Color(255, 255, 255));
        lg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.add(lg, new org.netbeans.lib.awtextra.AbsoluteConstraints(1660, 30, 190, 30));

        jLabel2.setText("Log Name");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 30, 60, 30));

        jButton1.setText("LOG OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        panel.setBackground(new java.awt.Color(204, 255, 204));
        panel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panel.setFocusable(false);
        panel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        User.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        add_to_table_user.setText("Add to Table");
        add_to_table_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_to_table_userActionPerformed(evt);
            }
        });
        User.add(add_to_table_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 330, -1, -1));

        T6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Contact Number", "Email", "Address", "User Name", "Password", "Re-enter Password", "States"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(T6);

        User.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, 1700, 320));
        User.add(emailt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 418, -1));
        User.add(contactt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 418, -1));

        jLabel4.setText("Email");
        User.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        jLabel5.setText("Contact Number");
        User.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));
        User.add(addresst4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 418, -1));

        jLabel6.setText("Address");
        User.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jLabel7.setText("Password");
        User.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        jLabel9.setText("User Name");
        User.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));
        User.add(usernamet6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 418, -1));

        namet1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namet1ActionPerformed(evt);
            }
        });
        User.add(namet1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 418, -1));

        jLabel8.setText("Name");
        User.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        jLabel17.setText("States");
        User.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel18.setText("Re-enter Password");
        User.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, -1));

        cmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 ", "2" }));
        cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbActionPerformed(evt);
            }
        });
        User.add(cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 80, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel10.setText("Add new user");
        User.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 280, 40));

        passwordt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordt8ActionPerformed(evt);
            }
        });
        User.add(passwordt8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 420, -1));

        passwordt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordt7ActionPerformed(evt);
            }
        });
        User.add(passwordt7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 210, 420, -1));

        T7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Contact Number", "Email", "Address", "User Name", "Password", "Re-enter Password", "States"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(T7);

        User.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, 1000, 280));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Current Users");
        User.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 430, 190, 40));

        SAVE_db_user.setText("Save to Db");
        SAVE_db_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVE_db_userActionPerformed(evt);
            }
        });
        User.add(SAVE_db_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, -1));

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        User.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1720, 20, -1, -1));

        show_table.setText("Show table");
        show_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_tableActionPerformed(evt);
            }
        });
        User.add(show_table, new org.netbeans.lib.awtextra.AbsoluteConstraints(1630, 390, -1, -1));

        edit_user.setText("Edit");
        edit_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_userActionPerformed(evt);
            }
        });
        User.add(edit_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(1540, 850, -1, -1));

        delete_user.setText("Delete");
        delete_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_userActionPerformed(evt);
            }
        });
        User.add(delete_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 850, -1, -1));

        update_save_user.setText("Update & Save");
        update_save_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_save_userActionPerformed(evt);
            }
        });
        User.add(update_save_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, -1, -1));

        Clear_user1.setText("Clear");
        Clear_user1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_user1ActionPerformed(evt);
            }
        });
        User.add(Clear_user1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, -1, -1));

        panel.addTab("User", User);

        javax.swing.GroupLayout PlayerLayout = new javax.swing.GroupLayout(Player);
        Player.setLayout(PlayerLayout);
        PlayerLayout.setHorizontalGroup(
            PlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1845, Short.MAX_VALUE)
        );
        PlayerLayout.setVerticalGroup(
            PlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 914, Short.MAX_VALUE)
        );

        panel.addTab("Player", Player);

        jButton12.setText("jButton5");

        javax.swing.GroupLayout memberplanLayout = new javax.swing.GroupLayout(memberplan);
        memberplan.setLayout(memberplanLayout);
        memberplanLayout.setHorizontalGroup(
            memberplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, memberplanLayout.createSequentialGroup()
                .addContainerGap(1562, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addGap(204, 204, 204))
        );
        memberplanLayout.setVerticalGroup(
            memberplanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memberplanLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton12)
                .addContainerGap(851, Short.MAX_VALUE))
        );

        panel.addTab("Members Plan", memberplan);

        jButton4.setText("jButton4");

        javax.swing.GroupLayout matchesLayout = new javax.swing.GroupLayout(matches);
        matches.setLayout(matchesLayout);
        matchesLayout.setHorizontalGroup(
            matchesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matchesLayout.createSequentialGroup()
                .addContainerGap(1662, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(104, 104, 104))
        );
        matchesLayout.setVerticalGroup(
            matchesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchesLayout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(jButton4)
                .addContainerGap(569, Short.MAX_VALUE))
        );

        panel.addTab("Matches", matches);

        Coaches.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel12.setText("Current Coacheres");
        Coaches.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 380, 370, 50));

        jLabel3.setText("Coacher Name");
        Coaches.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jLabel13.setText("Coacher Address");
        Coaches.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        jLabel14.setText("Coacher Contact");
        Coaches.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jLabel15.setText("Coacher Email");
        Coaches.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jLabel16.setText("Privet Coach price");
        Coaches.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnameActionPerformed(evt);
            }
        });
        Coaches.add(cname, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 98, 335, -1));

        caddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caddressActionPerformed(evt);
            }
        });
        Coaches.add(caddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 156, 335, -1));

        ccontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccontactActionPerformed(evt);
            }
        });
        Coaches.add(ccontact, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 185, 335, -1));
        Coaches.add(cemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 214, 335, -1));
        Coaches.add(cprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 243, 335, -1));

        add_to_table_coacher.setText("Add to Table");
        add_to_table_coacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_to_table_coacherActionPerformed(evt);
            }
        });
        Coaches.add(add_to_table_coacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, -1, -1));

        coacher_table_2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coacher Name", "NIC", "Coacher Address", "Coacher Contact", "Coacher Email", "Private Coach price"
            }
        ));
        jScrollPane4.setViewportView(coacher_table_2);

        Coaches.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, 1710, 350));

        jLabel19.setText("NIC");
        Coaches.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        cnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnicActionPerformed(evt);
            }
        });
        Coaches.add(cnic, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 127, 335, -1));

        clear_coacher.setText("Clear");
        clear_coacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_coacherActionPerformed(evt);
            }
        });
        Coaches.add(clear_coacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        SAVE_db_coacher.setText("Save to Db");
        SAVE_db_coacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVE_db_coacherActionPerformed(evt);
            }
        });
        Coaches.add(SAVE_db_coacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, -1, -1));

        update_save_coacher.setText("Update & Save");
        update_save_coacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_save_coacherActionPerformed(evt);
            }
        });
        Coaches.add(update_save_coacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, -1, -1));

        coacher_table_1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Coacher Name", "NIC", "Coacher Address", "Coacher Contact", "Coacher Email", "Private Coach price"
            }
        ));
        jScrollPane5.setViewportView(coacher_table_1);

        Coaches.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 100, 1110, 240));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel20.setText("Add Coacher");
        Coaches.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 20, 280, 40));

        edit_user1.setText("Edit");
        edit_user1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_user1ActionPerformed(evt);
            }
        });
        Coaches.add(edit_user1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1540, 850, -1, -1));

        delete_user1.setText("Delete");
        delete_user1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_user1ActionPerformed(evt);
            }
        });
        Coaches.add(delete_user1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 850, -1, -1));

        panel.addTab("Coaches", Coaches);

        jButton7.setText("jButton5");

        javax.swing.GroupLayout reportLayout = new javax.swing.GroupLayout(report);
        report.setLayout(reportLayout);
        reportLayout.setHorizontalGroup(
            reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reportLayout.createSequentialGroup()
                .addContainerGap(1257, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(509, 509, 509))
        );
        reportLayout.setVerticalGroup(
            reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jButton7)
                .addContainerGap(778, Short.MAX_VALUE))
        );

        panel.addTab("Report", report);

        jButton10.setText("jButton5");

        javax.swing.GroupLayout privetcoachesLayout = new javax.swing.GroupLayout(privetcoaches);
        privetcoaches.setLayout(privetcoachesLayout);
        privetcoachesLayout.setHorizontalGroup(
            privetcoachesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, privetcoachesLayout.createSequentialGroup()
                .addContainerGap(1689, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(77, 77, 77))
        );
        privetcoachesLayout.setVerticalGroup(
            privetcoachesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, privetcoachesLayout.createSequentialGroup()
                .addContainerGap(835, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(54, 54, 54))
        );

        panel.addTab("Private Coaches", privetcoaches);

        jButton8.setText("jButton5");

        javax.swing.GroupLayout paymentLayout = new javax.swing.GroupLayout(payment);
        payment.setLayout(paymentLayout);
        paymentLayout.setHorizontalGroup(
            paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentLayout.createSequentialGroup()
                .addGap(477, 477, 477)
                .addComponent(jButton8)
                .addContainerGap(1289, Short.MAX_VALUE))
        );
        paymentLayout.setVerticalGroup(
            paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentLayout.createSequentialGroup()
                .addGap(268, 268, 268)
                .addComponent(jButton8)
                .addContainerGap(621, Short.MAX_VALUE))
        );

        panel.addTab("Payment", payment);

        jPanel3.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1850, 950));

        jButton2.setText("HOME");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1918, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1083, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    ArrayList<String> user_data_list = new ArrayList<String>();
    String uid = "";
    int select_id = 0;

    void load_to_table() {
        try {

            DefaultTableModel dtm = (DefaultTableModel) T6.getModel();
            dtm.setRowCount(0);

            Statement s = dbcon.dbConnection().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM user");

            while (rs.next()) {

                Vector v = new Vector();

                String id = rs.getString("User_Id");
                String name = rs.getString("Name");
                String con = rs.getString("contact_Number");
                String email = rs.getString("email");
                String address = rs.getString("Address");
                String un = rs.getString("User_Name");
                String pw = rs.getString("Password");
                String repw = rs.getString("Reenter_password");
                String States = rs.getString("Status");
                user_data_list.add(id);

                v.add(name);
                v.add(con);
                v.add(email);
                v.add(address);
                v.add(un);
                v.add(pw);
                v.add(repw);
                v.add(States);

                dtm.addRow(v);

                //String tbData[] = {name, email, con, address, un, pw, repw, States};
                //DefaultTableModel dtm = (DefaultTableModel) T6.getModel();

                // dtm.addRow(tbData);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    ArrayList<String> coacher_data_list = new ArrayList<String>();
    String User_Id = "";
    int selectid = 0;

    void load_to_table_coacher() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) coacher_table_2.getModel();
            dtm.setRowCount(0);

            Statement s = dbcon.dbConnection().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM coach");

            while (rs.next()) {

                Vector v = new Vector();

                String id = rs.getString("Coach_Id");
                String name = rs.getString("Coach_name");
                String nic = rs.getString("NIC");
                String address = rs.getString("Coach_address");
                String contact = rs.getString("Coach_Contact");
                String email = rs.getString("Coach_email");
                String price = rs.getString("Privet_coach_price");
                coacher_data_list.add(id);

                v.add(name);
                v.add(nic);
                v.add(address);
                v.add(contact);
                v.add(email);
                v.add(price);
                dtm.addRow(v);

            }


        } catch (Exception e) {
            e.printStackTrace();
        }


    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        login l = new login();
        l.setVisible(true);
        this.dispose();
        System.gc();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Home h = new Home();
        h.setVisible(true);
        this.dispose();
        System.gc();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void delete_user1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_user1ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) T6.getModel();
            int i = coacher_table_2.getSelectedRow();
            String uid = coacher_data_list.get(i);

            Statement s = dbcon.dbConnection().createStatement();


            int yn = JOptionPane.showConfirmDialog(rootPane, "Are You Sure ? ", "Warning", JOptionPane.YES_NO_OPTION);

            if (yn == 0) {
                s.executeUpdate("DELETE FROM coach WHERE Coach_Id ='" + uid + "' ");


                dtm.setRowCount(0);
                coacher_data_list.clear();
                load_to_table_coacher();//delete eka

            }


        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_delete_user1ActionPerformed

    private void edit_user1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_user1ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) coacher_table_2.getModel();

            int i = coacher_table_2.getSelectedRow();
            uid = coacher_data_list.get(i);

            String name = dtm.getValueAt(i, 0).toString();
            String nic = dtm.getValueAt(i, 1).toString();
            String address = dtm.getValueAt(i, 2).toString();
            String contact = dtm.getValueAt(i, 3).toString();
            String email = dtm.getValueAt(i, 4).toString();
            String price = dtm.getValueAt(i, 5).toString();

            cname.setText(name);
            cnic.setText(nic);
            caddress.setText(address);
            ccontact.setText(contact);
            cemail.setText(email);
            cprice.setText(price);


            coacher_data_list.clear();
            load_to_table_coacher();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_edit_user1ActionPerformed

    private void update_save_coacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_save_coacherActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) coacher_table_2.getModel();

            String name = cname.getText();
            String nic = cnic.getText();
            String address = caddress.getText();
            String contact = ccontact.getText();
            String email = cemail.getText();
            String price = cprice.getText();

            Statement s = dbcon.dbConnection().createStatement();
            s.executeUpdate("UPDATE Coach set Coach_name = '" + name + "',NIC = '" + nic + "',Coach_address = '" + address + "',Coach_Contact= '" + contact + "',Coach_email = '" + email + "',Privet_coach_price= '" + price + "' WHERE Coach_Id='" + uid + "' ");


            cname.setText("");
            cnic.setText("");
            caddress.setText("");
            ccontact.setText("");
            cemail.setText("");
            cprice.setText("");


            load_to_table_coacher();

            dtm.setRowCount(0);
            coacher_data_list.clear();

            load_to_table_coacher();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_update_save_coacherActionPerformed

    private void SAVE_db_coacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVE_db_coacherActionPerformed
        try {
            String id = login.User_Id;
            DefaultTableModel dtm = (DefaultTableModel) coacher_table_1.getModel();

            for (int i = 0; i < dtm.getRowCount(); i++) {

                String name = dtm.getValueAt(i, 0).toString();
                String nic = dtm.getValueAt(i, 1).toString();
                String address = dtm.getValueAt(i, 2).toString();
                String contact = dtm.getValueAt(i, 3).toString();
                String email = dtm.getValueAt(i, 4).toString();
                String price = dtm.getValueAt(i, 5).toString();

                //String id = login.log_user;

                //System.out.println(id);
                Statement s = dbcon.dbConnection().createStatement();
                s.executeUpdate("INSERT INTO coach(Coach_name,NIC,Coach_address,Coach_Contact,Coach_email,Privet_coach_price,User_User_Id) VALUES ('" + name + "','" + nic + "','" + address + "','" + contact + "','" + email + "','" + price + "','" + id + "')");

            }
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(rootPane, "Sucessfully Saved to Database", "Sussess", JOptionPane.INFORMATION_MESSAGE);

            coacher_data_list.clear();
            load_to_table_coacher();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_SAVE_db_coacherActionPerformed

    private void clear_coacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_coacherActionPerformed
        cname.setText("");
        cnic.setText("");
        caddress.setText("");
        ccontact.setText("");
        cemail.setText("");
        cprice.setText("");
    }//GEN-LAST:event_clear_coacherActionPerformed

    private void cnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnicActionPerformed

    private void add_to_table_coacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_to_table_coacherActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) coacher_table_1.getModel();
            String name = cname.getText();
            String nic = cnic.getText();
            String address = caddress.getText();
            String contact = ccontact.getText();
            String email = cemail.getText();
            String price = cprice.getText();

            if (name.equals("")) {
                JOptionPane.showMessageDialog(rootPane, " Name Can't Be Empty", " Error", JOptionPane.ERROR_MESSAGE);
            } else if (nic.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "NIC Number Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (address.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Address Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (contact.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Number Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (email.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "You should enter your emil", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (price.equals("")) {

                JOptionPane.showMessageDialog(rootPane, "Price Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else {





                /*
                 * v.add(name); v.add(email); v.add(con); v.add(address);
                 * v.add(un); v.add(pw); v.add(repw); v.add(states);
                 * dtm.addRow(v);
                 */
                String data[] = {name, nic, address, contact, email, price};
                dtm.addRow(data);

                cname.setText("");
                cnic.setText("");
                caddress.setText("");
                ccontact.setText("");
                cemail.setText("");
                cprice.setText("");

                user_data_list.clear();




//            String data[] = {name, nic, address, contact, email, price};
//
//            dtm.addRow(data);
//
//            cname.setText("");
//            cnic.setText("");
//            caddress.setText("");
//            ccontact.setText("");
//            cemail.setText("");
//            cprice.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_add_to_table_coacherActionPerformed

    private void ccontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccontactActionPerformed

    private void caddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caddressActionPerformed

    private void cnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnameActionPerformed

    private void Clear_user1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_user1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Clear_user1ActionPerformed

    private void update_save_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_save_userActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) T6.getModel();

            String name = namet1.getText();
            String con = contactt3.getText();
            String email = emailt2.getText();
            String address = addresst4.getText();
            String un = usernamet6.getText();
            String pw = passwordt7.getText();
            String repw = passwordt8.getText();
            String states = cmb.getSelectedItem().toString();

            Statement s = dbcon.dbConnection().createStatement();
            s.executeUpdate("UPDATE user set Name = '" + name + "',Contact_Number = '" + con + "',Email = '" + email + "',Address = '" + address + "',User_Name = '" + un + "',Password= '"
                    + pw + "',Reenter_password='" + repw + "',Status='" + states + "' WHERE User_Id='" + User_Id + "' ");

            load_to_table();

            dtm.setRowCount(0);
            namet1.setText("");
            contactt3.setText("");
            emailt2.setText("");
            addresst4.setText("");
            usernamet6.setText("");
            passwordt7.setText("");
            passwordt8.setText("");
            cmb.setSelectedItem("");

            //user_data_list.clear();

            load_to_table();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_update_save_userActionPerformed

    private void delete_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_userActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) T6.getModel();
            int i = T6.getSelectedRow();
            String uid = user_data_list.get(i);

            Statement s = dbcon.dbConnection().createStatement();


            int yn = JOptionPane.showConfirmDialog(rootPane, "Are You Sure ? ", "Warning", JOptionPane.YES_NO_OPTION);

            if (yn == 0) {
                s.executeUpdate("DELETE FROM user WHERE User_Id='" + uid + "' ");


                dtm.setRowCount(0);
                user_data_list.clear();
                load_to_table();//delete eka

            }


        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_delete_userActionPerformed

    private void edit_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_userActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) T6.getModel();

            int i = T6.getSelectedRow();
            uid = user_data_list.get(i);

            String name = dtm.getValueAt(i, 0).toString();
            String con = dtm.getValueAt(i, 1).toString();
            String email = dtm.getValueAt(i, 2).toString();
            String address = dtm.getValueAt(i, 3).toString();
            String un = dtm.getValueAt(i, 4).toString();
            String pw = dtm.getValueAt(i, 5).toString();
            String repw = dtm.getValueAt(i, 6).toString();
            String states = dtm.getValueAt(i, 7).toString();

            namet1.setText(name);
            contactt3.setText(con);
            emailt2.setText(email);
            addresst4.setText(address);
            usernamet6.setText(un);
            passwordt7.setText(pw);
            passwordt8.setText(repw);
            cmb.setSelectedItem(states);


            user_data_list.clear();
            load_to_table();
            dtm.setRowCount(0);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_edit_userActionPerformed

    private void show_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_tableActionPerformed
        load_to_table();
    }//GEN-LAST:event_show_tableActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) T6.getModel();
            dtm.setRowCount(0);

            user_data_list.clear();
            load_to_table();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void SAVE_db_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVE_db_userActionPerformed
        try {

            DefaultTableModel dtm = (DefaultTableModel) T7.getModel();

            for (int i = 0; i < dtm.getRowCount(); i++) {

                String name = dtm.getValueAt(i, 0).toString();
                String con = dtm.getValueAt(i, 1).toString();
                String email = dtm.getValueAt(i, 2).toString();
                String address = dtm.getValueAt(i, 3).toString();
                String un = dtm.getValueAt(i, 4).toString();
                String pw = dtm.getValueAt(i, 5).toString();
                String repw = dtm.getValueAt(i, 6).toString();
                String states = dtm.getValueAt(i, 7).toString();
                //String id = login.username;
                //String id = login.log_user;

                Statement s = dbcon.dbConnection().createStatement();
                s.executeUpdate("INSERT INTO user(Name,Contact_Number,Email,Address,User_Name,Password,Reenter_password,Status)VALUES('" + name + "','" + con + "','" + email + "','" + address + "','" + un + "','" + pw + "','" + repw + "','" + states + "')");

            }
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(rootPane, "Sucessfully Saved to Database", "Sussess", JOptionPane.INFORMATION_MESSAGE);

            user_data_list.clear();
            load_to_table();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_SAVE_db_userActionPerformed

    private void passwordt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordt7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordt7ActionPerformed

    private void passwordt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordt8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordt8ActionPerformed

    private void cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbActionPerformed

    private void namet1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namet1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namet1ActionPerformed

    private void add_to_table_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_to_table_userActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) T7.getModel();
            String name = namet1.getText();
            String con = contactt3.getText();
            String email = emailt2.getText();
            String address = addresst4.getText();
            String un = usernamet6.getText();
            String pw = passwordt7.getText();
            String repw = passwordt8.getText();
            String states = cmb.getSelectedItem().toString();

            //Vector v = new Vector();

            if (name.equals("")) {
                JOptionPane.showMessageDialog(rootPane, " Name Can't Be Empty", " Error", JOptionPane.ERROR_MESSAGE);
            } else if (con.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Contact Number Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (email.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "You should enter your emil", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (address.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Address Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (un.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "User Name Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (pw.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Password Can't Be Empty", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (pw.equals(repw)) {

                /*
                 * v.add(name); v.add(email); v.add(con); v.add(address);
                 * v.add(un); v.add(pw); v.add(repw); v.add(states);
                 * dtm.addRow(v);
                 */
                String data[] = {name, con, email, address, un, pw, repw, states};
                dtm.addRow(data);

                namet1.setText("");
                contactt3.setText("");
                emailt2.setText("");
                addresst4.setText("");
                usernamet6.setText("");
                passwordt7.setText("");
                passwordt8.setText("");
                cmb.setSelectedItem("");

                user_data_list.clear();

            } else {
                JOptionPane.showMessageDialog(payment, "password does not match", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_add_to_table_userActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new admin_home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear_user1;
    private javax.swing.JPanel Coaches;
    private javax.swing.JPanel Player;
    private javax.swing.JButton SAVE_db_coacher;
    private javax.swing.JButton SAVE_db_user;
    private javax.swing.JTable T6;
    private javax.swing.JTable T7;
    private javax.swing.JPanel User;
    private javax.swing.JButton add_to_table_coacher;
    private javax.swing.JButton add_to_table_user;
    private javax.swing.JTextField addresst4;
    private javax.swing.JTextField caddress;
    private javax.swing.JTextField ccontact;
    private javax.swing.JTextField cemail;
    private javax.swing.JButton clear_coacher;
    private javax.swing.JComboBox cmb;
    private javax.swing.JTextField cname;
    private javax.swing.JTextField cnic;
    private javax.swing.JTable coacher_table_1;
    private javax.swing.JTable coacher_table_2;
    private javax.swing.JTextField contactt3;
    private javax.swing.JTextField cprice;
    private javax.swing.JButton delete_user;
    private javax.swing.JButton delete_user1;
    private javax.swing.JButton edit_user;
    private javax.swing.JButton edit_user1;
    private javax.swing.JTextField emailt2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lg;
    private javax.swing.JPanel matches;
    private javax.swing.JPanel memberplan;
    private javax.swing.JTextField namet1;
    private javax.swing.JTabbedPane panel;
    private javax.swing.JPasswordField passwordt7;
    private javax.swing.JPasswordField passwordt8;
    private javax.swing.JPanel payment;
    private javax.swing.JPanel privetcoaches;
    private javax.swing.JButton refresh;
    private javax.swing.JPanel report;
    private javax.swing.JButton show_table;
    private javax.swing.JButton update_save_coacher;
    private javax.swing.JButton update_save_user;
    private javax.swing.JTextField usernamet6;
    // End of variables declaration//GEN-END:variables
}
